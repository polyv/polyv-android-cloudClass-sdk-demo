apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "proguard-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        qatest {
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.support.appCompatV7
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api rootProject.ext.support.design
    api 'com.easefun.polyv:polyvSDKCloudClass:0.14.3-compatible'

    //glide
    api 'jp.wasabeef:glide-transformations:2.0.1'
    api 'com.github.bumptech.glide:glide:3.7.0'
    api 'com.github.bumptech.glide:okhttp3-integration:1.5.0'

    //room
    api ('android.arch.persistence.room:runtime:1.1.1'){
        exclude group:'com.android.support'
    }
}

//configurations .all {
//    resolutionStrategy.force 'com.github.bumptech.glide:glide:3.7.0'
//}

